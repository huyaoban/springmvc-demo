<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
       		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- 自动扫描基于注解的控制器，包括@Controller, @Service -->
	<context:component-scan base-package="com.huyaoban.springmvc.controller" />
	<context:component-scan base-package="com.huyaoban.springmvc.repository" />
	
	<!-- 注册HandlerMapper、HandlerAdapter两个映射类 -->
	<mvc:annotation-driven />
	
	<!-- 因为配置的spring是拦截所有请求，所以需要配置<mvc:default-servlet-handler />，来让静态资源通过（如js, css文件等） -->
	<!-- <mvc:default-servlet-handler /> -->
	
	<!-- 静态资源,需要单独处理.不经过DispatcherServlet -->
	<mvc:resources mapping="/css/**" location="/css/" />
	<mvc:resources mapping="/*.html" location="/" />
    
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="prefix" value="/WEB-INF/jsp/" />  
        <property name="suffix" value=".jsp" />  
    </bean>
    
    <!-- 将自定义的swagger配置类加载到spring容器 -->
	<bean
		class="springfox.documentation.swagger2.configuration.Swagger2DocumentationConfiguration"
		id="swagger2Config" />
	<mvc:resources location="classpath:/META-INF/resources/"
		mapping="swagger-ui.html" />
	<mvc:resources location="classpath:/META-INF/resources/webjars/"
		mapping="/webjars/**" />

</beans>